{
    "@odata.context": "$metadata#Processes/$entity",
    "@odata.etag": "W/\"132002\"",
    "Name": "sys_paDoc",
    "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#~~~~~~~~~~~~~~~~  Start Program Description ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#\r\n# This process generates the application documentation                                                                                  #\r\n#~~~~~~~~~~~~~~~~  End Program Description ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n#~~~~~~~~~~~~~~~~~~~  Maintenance Log ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# ----Date-----|----Programmer---|---------------Description---------------------------------------------------------------------#\r\n#   Mar-2017         Jim Miller    -  Created framework.                                                                                                  # \r\n#   May-2018     Dean Watts    - Revised structure and re-wrote output documents\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n\r\n# --- Declares\r\nDatasourceASCIIQuoteCharacter='';\r\n\r\n# --- Cubes\r\npaDoc_CubeName = '}sys_paDoc';\r\n\r\n# --- Dimensions\r\npaDoc_000_DimName = '}sys_paDoc';\r\npaDoc_001_DimName = '}sys_paDocRUX';\r\npaDoc_002_DimName = '}sys_paDocCubesProcesses';\r\npaDoc_003_DimName = '}sys_paDocDimensionsProcesses';\r\npaDoc_004_DimName = '}sys_paDocProcessesProcesses';\r\npaDoc_005_DimName = '}sys_paDocProcessesFiles';\r\npaDoc_006_DimName = '}sys_paDocChoresProcesses';\r\npaDoc_007_DimName = '}sys_paDocAppFolders';\r\npaDoc_008_DimName = '}sys_paDocPictureDriver';\r\n\r\n# --- constants\r\nNotFound = 0;\r\nReRunSetup = 1;\r\n\r\npDocumentName = Trim(pOutputSite) | Trim(pDocumentName);\r\nsavedname = pDocumentName;\r\n\r\n# --- make sure the documentor dimensions are built and available\r\n\r\nif (pSetting=ReRunSetup);\r\n         ExecuteProcess('sys_paDoc_Setup','pRUX',Trim(pRUX), 'pOutputSite', TRIM(pOutputSite) | 'outputs\\');\r\nEndif;\r\n\r\n# --- do the support dimensions exist? if not create it\r\n\r\n# --- start of main processing\r\n\r\n# --- make sure the cubes are mapped to the categories\r\ni=1;\r\nsSetupFlag = 'No';\r\n#DimensionDeleteAllElements(paDoc_008_DimName);\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Transformation','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Financial','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'System & Useability','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Mapping','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Commentary','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Calculation','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Bonus','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Currency','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Input','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Rates and Dates','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'TBD','C'); \r\n\r\nii = dimsiz('}Cubes');\r\nwhile (i<=ii);\r\n\tsE = dimnm('}cubes', i);\r\n\tif (subst(trim(sE),1,1)@<>'}');\r\n\t\tsEc = CellGetS(paDoc_CubeName, Trim(sE), 'category');\r\n                                           if (TRIM(sEc)@='');\r\n                                                                sEc = 'TBD';\r\n                                           endif;\r\n                                           if (dimix(paDoc_008_DimName, Trim(sEc))=0);\r\n                                                    DimensionElementInsert(paDoc_008_DimName,'', Trim(sEc),'C');\r\n                                           endif;\r\n\t\tif (Trim(sEc)@<>'');                                                                \r\n\t\t\tDimensionElementInsert(paDoc_008_DimName,'', Trim(sE),'N');\r\n\t\t\tDimensionElementComponentAdd(paDoc_008_DimName, Trim(sEc),Trim(sE), 1);\r\n\t\t\tsSetupFlag = 'Yes';                                           \r\n\t\tEndif;\r\n\tendif;\r\n\ti = i + 1;\r\nend;\r\n\r\n# -- Common Report Heading\r\nh1='<head><meta charset=\"UTF-8\"><link rel=\"stylesheet\" href=\"bootstrap-3.3.5/dist/css/bootstrap.min.css\"><link rel=\"stylesheet\" href=\"css/main.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"css/gridtable.css\"></head>\r\n       <body><nav class=\"navbar navbar-inverse navbar-fixed-top\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-nav-demo\" aria-expanded=\"false\">\r\n       <span class=\"sr-only\">Toggle navigation</span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button><a href=\"#\" class=\"navbar-brand\"><span class=\"glyphicon glyphicon-edit\" aria-hidden=\"true\"></span> paDoc</a>\r\n       </div><div class=\"collapse navbar-collapse\" id=\"bs-nav-demo\"><ul class=\"nav navbar-nav\"><li><a href=\"#\">About</a></li><li><a href=\"#\">Contact</a></li><li><a href=\"/tm1web/paDoc/main.html\">Main Menu</a></li></ul><ul class=\"nav navbar-nav navbar-right\"><li id=\"login-menu\" class=\"dropdown\">\r\n       <a id=\"drop1\" href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" role=\"button\" aria-expanded=\"true\">Creds<span class=\"caret\"></span></a>\r\n       <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"drop1\" ><li role=\"presentation\"><a role=\"menuitem\">User ID: </a><input id=\"username\" type=\"text\" placeholder=\"username\"></li><li role=\"presentation\"></li><li role=\"presentation\"><a role=\"menuitem\">Password: </a>\r\n       <input id=\"password\" type=\"password\" placeholder=\"password\"></li><li role=\"presentation\"><a role=\"menuitem\">Admin Server:</a><input id=\"AdServer\" type=\"text\" placeholder=\"Admin server\"></li><li role=\"presentation\"><a role=\"menuitem\">TM1 Server:</a>\r\n       <input id=\"TM1Server\" type=\"text\" placeholder=\"TM1 server\"></li><li id=\"btn-holder\"><button type=\"button\" class = \"btn btn-primary btn-small btn-space\" id=\"mdSetup\">Go!</button></li></ul></li></ul></div></div></nav>';\r\n\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Cube Structures.html  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\nsaved = Trim(pDocumentName);\r\npDocumentName = pOutputSite|'Cube Structures';\r\nasciioutput(Trim(pDocumentName) |  '.html',h1);\r\n\r\n# --- Create the report header\r\n\r\nasciioutput(Trim(pDocumentName) |  '.html', '<div id=\"cube-structure-header\"><font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' PA Cube Structures</center></h2></b></font>');\r\nasciioutput(Trim(pDocumentName) |  '.html', '<font size=\"1\" face=\"verdana\"><b><center>Note: cubes are listed below grouped by category</center></b></font>');\r\nasciioutput(Trim(pDocumentName) |  '.html', '<font size=\"1\" face=\"verdana\"><b><center>Model is as of ' | Trim(pAsOfDate) | '</center></b></font></div>');\r\n\r\n# --- start the table that will hold the current category of cubes\r\n\r\n# --- now drive the creation of the diagram by category, then cube\r\n\r\ni=1;\r\nii = dimsiz(paDoc_008_DimName);\r\n\r\nasciioutput(Trim(pDocumentName) |  '.html', '<div id=\"rpt-body\">');\r\nwhile (i<ii);\r\n\tsE = dimnm(paDoc_008_DimName, i);\r\n\tif (DTYPE(paDoc_008_DimName, sE)@='C');\r\n\t# --- its a category to process\r\n\t\tikids = ELCOMPN(paDoc_008_DimName, sE);\r\n\t\tif (iKids>0);\r\n\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<table id=\"'|sE|'\" class=\"gridtable big-table\">');\r\n\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<tr><td valign=\"top\" colspan=\"' | str(ikids,3,0) | '\" bgcolor=\"blue\"><font size=\"4\" color=\"black\"><b><center>' | sE | '</center></b></font></td></tr>');\r\n\t\t\tiii = 1;\r\n\t\t\twhile (iii<=iKids);\r\n\t\t\t\t# --- get the kid\r\n\t\t\t\tsCubeName = ELCOMP(paDoc_008_DimName, sE, iii);\r\n\t\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<td valign=\"top\">');\r\n\t\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<div id=\"'|sCubeName|'\" class=\"little-table\"><table class=\"gridtable\">');\r\n\t\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<tr><th><b><font size=\"1\"><center>' | sCubeName  | ' </center></b></th>');\r\n\t\t\t\t# --- process the cube\r\n\t\t\t\tj=1;  \r\n\t\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<tr><td><font size=\"1\">');\r\n\t\t\t\twhile (j<=30);\r\n\t\t\t\t\tsD = TABDIM(sCubeName, j);\r\n\t\t\t\t\tif (trim(sD)@<>'');\r\n\t\t\t\t\t\tgitIt = CellGetS(paDoc_CubeName, sCubeName, 'Dimensions');\r\n\t\t\t\t\t\tCellPutS(gitIT | '<BR>' | sD,paDoc_CubeName, sCubeName, 'Dimensions');\r\n\t\t\t\t\t\t# --- okay update this dim in the dim cube with the cube name\r\n\t\t\t\t\t\tif(subst(sD,1,1)@<>'}');\r\n\t\t\t\t\t\t\tgitIt = CellGetS(paDoc_CubeName, sD, 'Cubes');\r\n\t\t\t\t\t\telseif(scan(sCubeName, gitit)=0);\r\n\t\t\t\t\t\t\tCellPutS(gitIT | '<BR>' | sCubeName, paDoc_CubeName, sD, 'Cubes');\r\n\t\t\t\t\t\tendif;\r\n\t\t\t\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<font size=\"1\"><li>' | sD | '</font></li>');\r\n\t\t\t\t\tendif;\r\n\t\t\t\tj=j+1;\r\n\t\t\t\tend;\r\n\t\t\t\tiii = iii + 1;\r\n\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '</td></table></div></td>');\r\n\t\t\tend;\r\n\t\tendif;\r\n\tendif;\t\r\n\ti=i+1;\r\nend;\r\nasciioutput(Trim(pDocumentName) |  '.html', '</div>');\r\n\r\nif (sSetupFlag@='No');\r\n         asciioutput(Trim(pDocumentName) |  '.html', '<table class=\"gridtable\"><td><center>You have not categorized any cubes. Diagram can not be generated</center></td></table>');\r\nEndif;\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\  Cube Details.html  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n\r\npDocumentName = saved;\r\npDocumentName = pOutputSite|'Cube Details';\r\n\r\nasciioutput(Trim(pDocumentName) |  '.html', h1);\r\n\r\n# --- cube details header starts here\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"cube-detail-header\" class=\"title1\"><h2>' | Trim(pHeadingText) | ' PA Cube Specifics</h2></div>');\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"graphic-details-hdr\"><p class=\"title2\">Cubes by Number of Dimensions</p>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<p class=\"title3\">(Note that more than 12 dimensions per cube is non-optimal)</pt></div>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"graphic-details\"><iframe id=\"gdetnum\" src=\"CubViz001.html\"></iframe>'); \r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe id=\"gdet\" src=\"keyed2.html\"></iframe></div>'); \r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"graphic-relative-hdr\"><p class=\"title2\">Cubes by Proportional Size</p></div>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"graphic-relative\"><iframe id=\"grelsize\" src=\"bubbleme.html\"></iframe>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe id=\"greldet\" src=\"flare.html\"></iframe></div>');\r\n\r\n# --- start of live cube details\r\n\r\n# --- setup data file for cubes graphing\r\n\r\nasciioutput(Trim(pOutputSite) | 'cubs.csv', 'salesperson,sales');\r\n\r\n# --- loop the cubs again\r\nnoCubes = dimsiz('}Cubes');\r\nfCounter = 1;\r\nkeyd2 = '';\r\nwhile (fCounter <= noCubes);\r\n\tV1 = dimnm('}Cubes', fCounter);\r\n\tif(subst(V1,1,1)@<>'}');\r\n\t           sk = CellGetS(paDoc_CubeName , V1, 'Notes');\r\n                           if(Trim(sk)@<>'Exclude');\r\n\t\taq = CellGetS(paDoc_CubeName , V1, 'Category');\r\n\t\tV2=  CellGetS(paDoc_CubeName , V1, 'Purpose');\t\t\r\n\t\tv3 = FileExists(Trim(pRUX) | TRIM(V1) |'.RUX');\r\n\t                if (V3=0);\r\n\t\t          V4 = '';\r\n\t                else;\r\n\t\t          V4='Yes';\r\n\t                endif;\r\n                          endif;\r\n\r\n\tV5a='';\r\n\tsEE = '';\r\n\ttheP = '';\r\n\tMEASURES_DIMENSION='';\r\n\tNoM=0;\r\n\txnay=0;\r\n\txnayW=0;\t\r\n\tV5='';\r\n\tjim = 1;\r\n\tmyDim = 'start';\r\n\tnoM =0;\r\n\topp=0;\r\n\r\n\twhile (myDim@<>'');\r\n\t\tmyDim = TABDIM(V1, jim);\r\n\t\tif (TRIM(myDim)@<>'');\r\n\t\t\tV5 = V5 |  myDim | ', ';\r\n\t\t\topp = opp + 1;\r\n\t\t\tasciioutput(Trim(pOutputSite) | 'cubs.csv', str(fCounter,9,0), str(opp,3,0));\r\n\t\tendif;\r\n\t\tjim = jim + 1;\r\n\tend;\r\n\r\n\tkeyd2 = keyd2  | str(fCounter,9,0) | ' - ' | trim(V1);\r\n\r\n# ---  check for designated  measures and period dimensions\r\n\tMEASURES_DIMENSION = cellgets('}CubeProperties', Trim(V1), 'MEASURES_DIMENSION');\r\n\tif (Trim(MEASURES_DIMENSION)@<>'');\r\n\t\tnoM = dimsiz(MEASURES_DIMENSION);\r\n\telse;\r\n\t\tMEASURES_DIMENSION = '* * Warning - No measures dimension designated * *';\r\n\t\tnoM = 0;\r\n\tendif;\r\n# ---  check for designated  measures and period dimensions\r\n\tTIME_DIMENSION = cellgets('}CubeProperties', Trim(V1), 'TIME_DIMENSION');\r\n\tif (Trim(TIME_DIMENSION)@<>'');\r\n\t\tnoP = dimsiz(TIME_DIMENSION);\r\n\telse;\r\n\t\tTIME_DIMENSION = '* * Warning - No time dimension designated * *';\r\n\t\tnoP = 0;\r\n\tendif;\r\n\r\n\tLOGGING = cellgets('}CubeProperties', Trim(V1), 'LOGGING');\r\n\tDEMANDLOAD  = cellgets('}CubeProperties', Trim(V1), 'DEMANDLOAD');\r\n\tmyL = Long(trim(V5));\r\n\tV5a = Subst(V5, 1, (myL-1));\r\n\tfoo = ELCOMPN('}sys_paDocRUX', 'Source Cube: ' | Trim(V1));\r\n\tfoo1 = 1;\r\n\tsEE = '';\r\n\tasciioutput(pOutputSite | 'fooboutput.cma',sEE,'before foo',V1,'Source Cube: ' | Trim(V1),STR(foo,1,0));\r\n\twhile (foo1<=foo);\r\n\t\tasciioutput(pOutputSite | 'foooutputprecheck.cma',sEE,STR(foo,1,0),ELCOMP('}paDocRUX', 'Source Cube: ' | Trim(V1), foo1));\r\n\t\tif (foo1>1);\r\n\t\t\tsEE = sEE | ', ' | ELCOMP('}sys_paDocRUX', 'Source Cube: ' | Trim(V1), foo1);\r\n\t\t\tasciioutput(pOutputSite | 'foo1output.cma',sEE,'anyone home');\r\n\t\telse;\r\n\t\t\tsEE = sEE | ' ' | ELCOMP('}sys_paDocRUX', 'Source Cube: ' | Trim(V1), foo1);\r\n\t\t\tasciioutput(pOutputSite | 'foooutput.cma',sEE,'anyone');\r\n\t\tendif;\r\n\t\tfoo1 = foo1 + 1;\r\n\tend;\r\n\r\n# --- gather the processes list\r\n\ttheP = '';\r\n\tmanyp = ELCOMPN('}sys_paDocCubesProcesses', 'H-' |Trim(V1));\r\n\tm1 = 1;\r\n\twhile (m1<=manyp);\r\n\t\tsoap = ELCOMP('}sys_paDocCubesProcesses', 'H-' |Trim(V1), m1);\r\n\t\ttheP = theP  | Trim(soap) |  '<BR>';\r\n\t\tm1 = m1 + 1;\r\n\tend;\r\n\r\n# --- for this cube check access of each group\r\n\r\n\tngrps = dimsiz('}groups');\r\n\tv = 1;\r\n\txnay =0;\r\n\txnayW=0;\r\n\twhile (v <= ngrps);\r\n\t\tsGrp = dimnm('}groups', v);\r\n\t\tmyA = CellGetS('}CubeSecurity', Trim(V1), Trim(sGrp));\r\n\t\tif (Trim(myA)@<>'');\r\n\t\t\tif (Trim(myA)@='Read');\r\n\t\t\t\txnay = xnay + 1;\r\n\t\t\telseif (Trim(myA)@='Write');\r\n\t\t\t\txnayW = xnayW + 1;\r\n\t\t\tendif;\r\n\t\tendif;\r\n\t\tv = v +1;\r\n\tend;\r\n\r\n\tmViews =  CellGetS('}sys_paDoc' , V1, 'Views');\r\n\txnay = scan(',,',mViews);   \r\n\r\n# --- now we gotta add all of the users private views\r\n\tick = dimsiz('}Clients');\r\n\ticky = 1;\r\n\twhile (icky<=ick);\r\n\t\twhome1 = dimnm('}clients', icky);\r\n\t\tif (dimix('}paDoc', whome1)>0);\r\n\t\t\tncubes = dimsiz('}Cubes');\r\n\t\t\tnc=1;\r\n\t\t\twhile (nc<=ncubes);\r\n\t\t\t\tmyCube = dimnm('}Cubes', nc);\r\n\t\t\t\tpvi = CellGetS('}sys_paDoc', myCube, whome1);\r\n\t\t\t\tif (trim(pvi)@<>'');\r\n\t\t\t\t\tmViews = mViews | ',' | pvi;\r\n\t\t\t\tendif;\r\n\t\t\t\tnc=nc +1;\r\n\t\t\tend;\r\n\t\tendif;\r\n\t\ticky = icky + 1;\r\n\tend;\r\n\r\n\tfmViews = subst(mViews,1,(LONG(mViews)-1));\r\n\tasciioutput(Trim(pDocumentName)  |  '.html', '<table id=\"'|V1|'\" class=\"gridtable cube-table\" width=\"600\"><tr><th>Cube Name</th><th width=\"50\">Category</th><th>Purpose</th><th>Dimensions</th><th>Rules</th></tr>');\r\n                endif;\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td>' | V1 | ' </td><td>' | aq | ' </td><td>' | V2 | ' </td><td>' | V5a  | ' </td><td><center>' | V4 | '</center> </td></tr>');\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Cubes Referenced in Rules:</b></td><td colspan=\"9\">' |  Trim(sEE) | '</td></tr>');\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Referenced in Process:</b></td><td colspan=\"9\">' |  Trim(theP)| '</td></tr>');\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Views:</b></td><td colspan=\"9\">' |  fmViews | '</td></tr>');\r\n\r\n\tc = 1;\r\n\tcccc = '';\r\n\tiz=0;\r\n\tcc = dimsiz('}Groups');\r\n\twhile (c<=cc);\r\n\t\tsC = dimnm('}Groups', c);\r\n\t\tif (Trim(sC)@<>'');\r\n\t\t\tccc = cellgets('}CubeSecurity', Trim(V1), Trim(sC));\r\n\t\t\tif (trim(ccc)@<>'');\r\n\t\t\t\tflipped = Trim(sC);\r\n\t\t\t\tif (iz=0);\r\n\t\t\t\t\tcccc = cccc | Trim(flipped);\r\n\t\t\t\telse;\r\n\t\t\t\t\tcccc = cccc | ', ' |Trim(flipped);\r\n\t\t\t\t\tiz=1;\r\n\t\t\t\tendif;\r\n\t\t\tendif;\r\n\t\tendif;\r\n\t\tc = c + 1;\r\n\tend;\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Groups with Access:</b></td><td colspan=\"9\">Read=' | str(xnay,3,0) | '<BR>Write=' | str(xnayW,3,0) | '<BR>' | Trim(cccc) | '</td></tr>');\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Measures Dimension<BR>No. of Measures:</b></td><td colspan=\"9\">' | Trim(MEASURES_DIMENSION) | '<BR>' | str(NoM,3,0) | '</td></tr>');\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Time Dimension<BR>No. of Measures:</b></td><td colspan=\"9\">' | Trim(TIME_DIMENSION ) | '<BR>' | str(NoP,3,0) | '</td></tr>');\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Logging<BR>On Demand:</b></td><td colspan=\"9\">' | Trim(LOGGING ) | '<BR>' | DEMANDLOAD | '</td></tr>');\r\n\t\r\n\tfCounter = FCounter + 1;\r\n\t\r\nend;\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Processes and Chores.html   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n\r\npDocumentName = pOutputSite|'Processes and Chores';\r\nasciioutput(Trim(pDocumentName)  |  '.html', h1);\r\nasciioutput(Trim(pDocumentName)   |  '.html', '<div id=\"pro-detail-header\"><h2>' | Trim(pHeadingText) | ' TM1 Processes</h2></div>');\r\n\r\nNoProcesses = dimsiz('}Processes');\r\n\r\nasciioutput(Trim(pDocumentName)   |  '.html', '<div id=\"pro-title\"><p class=\"title2\">Total Number of TurboIntegrator Processes: ' | str(NoProcesses,9,0)|'</p></div>');\r\nasciioutput(Trim(pDocumentName)   |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\nasciioutput(Trim(pDocumentName)  | '.html', '<th>Process Name</th><th>Category</th><th>Purpose</th><th>Total<BR>Lines</th><th>Cubes Referenced</th><th>Dimensions Referenced</th><th>Processes Referenced</th><th>Referenced<BR>In Chore(s)</th></tr>');\r\n\r\n# --- loop the processes nows\r\n\r\nfCounter = 1;\r\nwhile (fCounter <= NoProcesses);\r\n#     asciioutput(Trim(pDocumentName)   |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\n#     asciioutput(Trim(pDocumentName)  | '.html', '<th>Process Name</th><th>Category</th><th>Purpose</th><th>Total<BR>Lines</th><th>Cubes Referenced</th><th>Dimensions Referenced</th><th>Processes Referenced</th><th>Referenced<BR>In Chore(s)</th></tr>');\r\n\tV1 = dimnm('}Processes', fCounter);\r\n\tif(subst(V1,1,1)@<>'}');\r\n\t\tsE = CellGetS(paDoc_CubeName , V1, 'Exclude');\r\n\tendif;\r\n\tif (subst(Trim(V1),1,1)@<>'}' & sE@<>'Yes');\r\n\t\tprocessesCategory = CellGetS(paDoc_CubeName , V1, 'Category');\r\n\t\tprocessPurpose =  CellGetS(paDoc_CubeName , V1, 'Purpose');\r\n\t\tprocessNote = CellGetS(paDoc_CubeName , V1, 'Notes');\r\n\t\tif (trim(processNote)@<>'Exclude');\r\n# --- loop thru cubes and see if this process is a child of any of them\r\n\t\t\tlove = dimsiz('}Cubes');\r\n\t\t\tlover = 1;\r\n\t\t\tsloverCube = '';\r\n\t\t\twhile (lover <=love);\r\n\t\t\t\tloveCube = dimnm('}paDocCubesProcesses', lover);\r\n\t\t\t\tif (ELISANC('}paDocCubesProcesses', loveCube, V1)=1);\r\n\t\t\t\t\tif (subst(trim(loveCube),1,2)@='H-');\r\n\t\t\t\t\t\tSj = subst(trim(loveCube),3,99);\r\n\t\t\t\t\telse;\r\n\t\t\t\t\t\tSj = loveCube;\r\n\t\t\t\t\tendif;\r\n\t\t\t\t\tsloverCube = sloverCube | Sj | '<br>';\r\n\t\t\t\tendif;\r\n\t\t\t\tlover = lover + 1;\r\n\t\t\tend;\r\n# --- loop thru dimensions and see if this process is a child of any of them\r\n\t\t\tlove = dimsiz('}Dimensions');\r\n\t\t\tlover = 1;\r\n\t\t\tsloverDim = '';\r\n\t\t\twhile (lover <=love);\r\n\t\t\t\tloveCube = dimnm('}paDocDimensionsProcesses', lover);\r\n\t\t\t\tif (ELISANC('}paDocDimensionsProcesses', loveCube, V1)=1);\r\n\t\t\t\t\tif (subst(trim(loveCube),1,2)@='H-');\r\n\t\t\t\t\t\tSj = subst(trim(loveCube),3,99);\r\n\t\t\t\t\telse;\r\n\t\t\t\t\t\tSj = loveCube;\r\n\t\t\t\t\tendif;\r\n\t\t\t\t\tsloverDim = sloverDim | Sj | '<br>';\r\n\t\t\t\tendif;\r\n\t\t\t\tlover = lover + 1;\r\n\t\t\tend;\r\n# --- loop thru processes and see if this process is a child of any of them\r\n\t\t\tlove = dimsiz('}Processes');\r\n\t\t\tlover = 1;\r\n\t\t\tsloverPro = '';\r\n\t\t\twhile (lover <=love);\r\n\t\t\t\tloveCube = dimnm('}Processes', lover);\r\n\t\t\t\tif (ELISANC(paDoc_004_DimName, 'H-' | loveCube, V1)=1);\r\n\t\t\t\t\tsloverPro = sloverPro | loveCube | '<br>';\r\n\t\t\t\tendif;\r\n\t\t\t\tlover = lover + 1;\r\n\t\t\tend;\r\n# --- loop thru files and see if this process is a child of any of them\r\n\t\t\tikiders=ELCOMPN(paDoc_005_DimName, Trim(V1));\r\n\t\t\tikidercare = 1;\r\n\t\t\tsloverFile = '';\r\n\t\t\twhile (ikidercare<=ikiders);\r\n\t\t\t\tloveCube = ELCOMP(paDoc_005_DimName, Trim(V1), ikidercare);\r\n\t\t\t\tsloverFile = sloverFile | loveCube | '<br>';\r\n\t\t\t\tikidercare = ikidercare + 1;\r\n\t\t\tend;\r\n\t\t\tprocessLines = CellGetS(paDoc_CubeName, Trim(V1), 'Size');\r\n\t\t\tn = dimsiz('}chores');\r\n\t\t\tnn=1;\r\n\t\t\tdachores = '';\r\n\t\t\twhile (nn<=n);\r\n\t\t\t\tnnn = dimnm('}Chores', nn);\r\n\t\t\t\tnnnn = ELISANC('}paDocChoresProcesses', trim(nnn), Trim(V1));\r\n\t\t\t\tif (nnnn=1);\r\n\t\t\t\t\tdachores = dachores | Trim(nnn) | ' ';\r\n\t\t\t\tendif;\r\n\t\t\t\tnn = nn + 1;\r\n\t\t\tend;\r\n\t\t\tasciioutput(Trim(pDocumentName) |  '.html','<tr><td><B>' | ' ' | V1 | ' </B></td><td>' | processesCategory | ' </td><td>' | processPurpose | ' </td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><center>' | processLines | ' </center></td><td>' | sloverCube   | ' </td><td><center>' | sloverDim | '</center> </td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>' | trim(sloverPro) | ' </td><td>' | trim(dachores) | ' </td></tr>');\r\n\t\t\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Files Referenced:</b></td><td colspan=\"8\">' | Trim(sloverFile) | ' </td></tr>');\r\n\t\t\titout = cellgets(paDoc_CubeName, Trim(V1), 'Notes');\r\n\t\t\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td><b>Files Written:</b></td><td colspan=\"8\">' | Trim(itout) | ' </td></tr>');\r\n\r\n\t\tendif;\r\n\tendif;\r\n\r\nfCounter = fCounter + 1;\r\n\r\n#\tasciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\n#\tasciioutput(Trim(pDocumentName)   | '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Processes<BR></h1>');\r\n#\tasciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\n#\tasciioutput(Trim(pDocumentName)  |  '.html', '<th>Process Name</th><th>Category</th><th>Purpose</th><th>Total<BR>Lines</th><th>Cubes Referenced</th><th>Dimensions Referenced</th><th>Processes Referenced</th><th>Referenced<BR>In Chore(s)</th></tr>');\r\n\r\nend;\r\n\r\n# --- Create the Chores table\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Chores<BR></h1>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"800\"><tr><th>Chore Name</th><th>Category</th><th>Purpose</th><th>Processed Referenced</th><th>Active Y/N</th><th>Start Date</th><th>Notes</th>');\r\n\r\n# --- loop the chores now\r\nnoChores = dimsiz('}Chores');\r\nfCounter = 1;\r\nsGotChores = 'No';\r\nwhile (fCounter <= noChores);\r\n\tV1 = dimnm('}Chores', fCounter);\r\n\tif (subst(Trim(V1),1,1)@<>'}');\r\n\t\tprocessesCategory = CellGetS(paDoc_CubeName , V1, 'Category');\r\n\t\tprocessPurpose =  CellGetS(paDoc_CubeName , V1, 'Purpose');\r\n\t\tprocessNotes =  CellGetS(paDoc_CubeName , V1, 'Notes');\r\n\t\tikiders=ELCOMPN(paDoc_006_DimName, Trim(V1));\r\n\t\tikidercare = 1;\r\n\t\tsloverProcess = '';\r\n\t\twhile (ikidercare<=ikiders);\r\n\t\t\tloveCube = ELCOMP(paDoc_006_DimName, Trim(V1), ikidercare);\r\n\t\t\tsloverProcess = sloverProcess | loveCube | '<br>';\r\n\t\t\tikidercare = ikidercare + 1;\r\n\t\tend;\r\n\t\tsStatus = CellGetS(paDoc_CubeName , V1, 'Status');\r\n\t\tsSDT = CellGetS(paDoc_CubeName , V1, 'Start Date Time');\r\n\t\tsGotChores = 'Yes';\r\n\t\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td>' | V1 | ' </td><td>' |  processesCategory  | ' </td><td>' | processPurpose  | ' </td><td>' | sloverProcess  | ' </td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td><center>' | sStatus | '</center> </td><td>' | sSDT | ' </td><td>' | processNotes  | ' </td></tr>');\r\n\tendif;\r\n\t\r\nfCounter = fCounter + 1;\r\n\r\nend;\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\nif (sGotChores@='No');\r\n\tasciioutput(Trim(pDocumentName) | '.html', '<table class=\"gridtable\"><td><center>No Appication Chores Found.</center></td></table>');\r\nendif;\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Dimensions.html   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n\r\npDocumentName = pOutputSite|'Dimensions';\r\nasciioutput(Trim(pDocumentName)  |  '.html', h1);\r\n\r\n# --- add the details\r\n\r\nNoAtts = 0;\r\nNoDims = DIMSIZ('}Dimensions');\r\nq=1;\r\n# pull number of dimensions and number of elements in them from server for display in title\r\nNid=0;\r\ntotalelments=0;\r\nl = 0;\r\nwhile(q<=NoDims);\r\n\tsq=dimnm('}Dimensions', q);\r\n\tif (subst(sq,1,1)@<>'}');\r\n\t\tNid=Nid+1;\r\n\t\tif (dimsiz(sq)>l);\r\n\t\t\tl = dimsiz(sq);\r\n\t\t\tlq = sq;\r\n\t\tendif;\r\n\t\ttotalelments =  totalelments + dimsiz(sq);\r\n\tendif;\r\n\tq=q+1;\r\nend;\r\nabig = totalelments/Nid;\r\n\r\n# --- Create Header and graphic\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"dim-detail-header\"><h2><b>' | Trim(pHeadingText) | ' TM1 Dimensions</h2></div>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"dim-detail-title\"><p class=\"title2\">Total Number of Dimensions: ' | STR(Nid,3,0)|'</div>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"dim-detail-subtitle1\"><p class=\"title3\">Average Dimension Size: ' | str(abig,5,0) | ' elements</p><p class=\"title3\">Largest Dimension: ' | lq | ', with ' | str(l,9,0) | ' indexes</p></div>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"dim-graphic-hdr\"><p class=\"title2\">Size of Dimensions by Elements</p></div>');\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"graphic-dim\"><iframe id=\"grdimuse\" src=\"DimViz001.html\"></iframe>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe id=\"grdimdet\" src=\"keyed.html\"></iframe></div>');\r\n\r\n#asciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"800\"><tr>');\r\n#asciioutput(Trim(pDocumentName)  |  '.html', '<th>Dimension Name</th><th>Category</th><th>Purpose</th><th>Attribute/Type</th><th>Number<BR>of<BR>Elements</th><th>Cubes</th><th>Shared</th><th>Subsets</th>');\r\n\r\n# --- loop the dimensions now\r\nfCounter = 1;\r\ndcounter = 0;\r\nkeyd='';\r\nasciioutput(Trim(pOutputSite) | 'sales.csv', 'salesperson,sales');\r\nwhile (fCounter <= noDims);\r\n\tV1 = dimnm('}Dimensions', fCounter);\r\n\tif(fCounter = 1);\r\n\t\tasciioutput(Trim(pDocumentName)  |  '.html', '<table id=\"'|V1|'\" class=\"gridtable cube-table\" width=\"800\"><tr>');\r\n\t\tasciioutput(Trim(pDocumentName)  |  '.html', '<th>Dimension Name</th><th>Category</th><th>Purpose</th><th>Attribute/Type</th><th>Number<BR>of<BR>Elements</th><th>Cubes</th><th>Shared</th><th>Subsets</th>');\r\n\tendif;\r\n\tif(subst(V1,1,1)@<>'}');\r\n\t\tEE =  CellGetS(paDoc_CubeName , V1, 'Exclude');\r\n\tendif;\r\n\tif (subst(Trim(V1),1,1)@<>'}' & EE @<>'Exclude');\r\n\t\tprocessesCategory = CellGetS(paDoc_CubeName , V1, 'Category');\r\n\t\tprocessPurpose =  CellGetS(paDoc_CubeName , V1, 'Purpose');\r\n\t\tprocessNotes =  CellGetS(paDoc_CubeName , V1, 'subsets');\r\n\t\tprocessCubes =  CellGetS(paDoc_CubeName , V1, 'Cubes');\r\n\t\tif (TRIM(processCubes)@='');\r\n\t\t\tshrd = 'No';\r\n\t\telseif (scan('<BR>', subst(trim(processCubes),5,99))=0);\r\n\t\t\tshrd = 'No';\r\n\t\telse;\r\n\t\t\tshrd ='Yes';\r\n\t\tendif;\r\n\tendif;\r\n\ti = FileExists('}ElementAttributes_' | Trim(V1)  | '.dim');\r\n\tif (i>0);\r\n\t\tikiders = dimsiz('}ElementAttributes_' | Trim(V1));\r\n\t\tNoAtts = NoAtts + ikiders;\r\n\t\tic = 1;\r\n\t\tsA='';\r\n\t\twhile (ic<=ikiders);\r\n\t\t\tsE = dimnm('}ElementAttributes_' | Trim(V1), ic);\r\n\t\t\tif (sE@<>'');\r\n\t\t\t\tatype=DTYPE('}ElementAttributes_' | Trim(V1), Trim(sE));\r\n\t\t\t\tif (atype@='AA');\r\n\t\t\t\t\tatype = '(Alias)';\r\n\t\t\t\telseif (atype@='AS');\r\n\t\t\t\t\tatype = '(String)';\r\n\t\t\t\telseif (atype@='AN');\r\n\t\t\t\t\tatype='(Number)';\r\n\t\t\t\telse;\r\n\t\t\t\t\tatype = atype;\r\n\t\t\t\t\tsE = sE | '  ' | trim(atype);\r\n\t\t\t\t\tsA = sA | sE | '<BR>';\r\n\t\t\t\tendif;\r\n\t\t\tic = ic + 1;\r\n\t\t\tendif;\r\n\t\tend;\r\n\tnoElements = dimsiz(V1);\r\n\txnay = scan('<BR><BR><BR>',processNotes);   \r\n\t\tif (xnay=0);\r\n\t\t\txnay=long(processNotes);\r\n\t\tendif;\r\n\tfprocessNotes = subst(processNotes,1,xnay);             \r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td>' | V1 | ' </td><td>' |  processesCategory   | ' </td><td>' | processPurpose   | ' </td><td>' |  sA  | ' </td>\r\n\t\t\t\t\t\t<td nowrap=\"nowrap\"><center>' | str(noElements,3,0) | '</center> </td><td>' |  processCubes   | ' </td><td>' |  shrd   | ' </td>\r\n\t\t\t\t\t\t<td valign=\"Top\">' |  trim(fprocessNotes)   | ' </td></tr>');\r\n\tdcounter = dcounter + 1;\r\n\t\tif (shrd@='Yes');\r\n\t\t\tasciioutput(Trim(pOutputSite) | 'sales.csv', str(dcounter,3,0), str(noElements,3,0));\r\n\t\t\tkeyd = keyd | ' ' | str(dcounter,3,0) | ' - ' | Trim(V1);\r\n\t\tendif;\r\n\t\tif ( fCounter < noDims);\r\n\t\t\tasciioutput(Trim(pDocumentName)  |  '.html', '<table id=\"'|V1|'\" class=\"gridtable cube-table\" width=\"800\"><tr>');\r\n\t\t\tasciioutput(Trim(pDocumentName)  |  '.html', '<th>Dimension Name</th><th>Category</th><th>Purpose</th><th>Attribute/Type</th><th>Number<BR>of<BR>Elements</th><th>Cubes</th><th>Shared</th><th>Subsets</th>');\r\n\t\tendif;\r\n\r\n\tendif;\r\n\tfCounter = fCounter + 1;\r\nend;\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table>');\r\n#asciioutput(Trim(pOutputSite) | 'keyed.html', '<font size=\"1\" face=\"verdana\"><center>' | keyd | '</center></font>');\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Application Folders.html   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# ---- let's start the application folders section here\r\n\r\npDocumentName = pOutputSite|'Application Folders';\r\nasciioutput(Trim(pDocumentName)  |  '.html', h1);\r\n\r\nno_Folders = dimsiz('}paDocAppFolders');\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"app-detail-header\"><h2>' | Trim(pHeadingText) | ' TM1 Application Folders</h2></div>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"app-title\"><p class=\"title2\">Total Folders: ' | str(no_Folders,3,0)  | ' </p></div>');\r\n#asciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"app-details\"><table class=\"gridtable\" width=\"900\"><tr>');\r\n#asciioutput(Trim(pDocumentName)  |  '.html', '<th>Folder Name</th><th>Category</th><th>Purpose</th><th>Sub-Folders<BR>or Files</th><th>Type</th><th>Groups with Access<BR>To Folder</th>');\r\n\r\nnt = 1;\r\nwhile (nt<=no_Folders);\r\n\tprocessAppFolders = dimnm('}paDocAppFolders', nt);\r\n\tnoKids = ELCOMPN('}ApplicationEntries', processAppFolders);\r\n\tick = 1;\r\n\tLR = '';\r\n\tif(nt=1);\r\n\t\tasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"'|processAppFolders|'\"><table class=\"gridtable\" width=\"900\"><tr>');\r\n\t\tasciioutput(Trim(pDocumentName)  |  '.html', '<th>Folder Name</th><th>Category</th><th>Purpose</th><th>Sub-Folders<BR>or Files</th><th>Type</th><th>Groups with Access<BR>To Folder</th>');\r\n\tendif;\r\n\twhile (ick<=noKids);\r\n\t\tsbf = ELCOMP('}ApplicationEntries', processAppFolders, ick);\r\n\t\tLR = LR | TRim(sbf) | '<BR>';\r\n\t\tick = ick + 1;\r\n\tend;\r\n\tTpurpose = CellGetS(paDoc_CubeName, processAppFolders, 'Purpose');\r\n\tTcategory = CellGetS(paDoc_CubeName, processAppFolders, 'Category');     \r\n# --- loop thru all groups and see what groups may have access to this folder\r\n\td = dimsiz('}groups');\r\n\tddq = 1;\r\n\tddd = '';\r\n\tgotaccess = '';\r\n\twhile (ddq<=d);\r\n\t\tdn = dimnm('}groups', ddq);\r\n\t\tddd = cellgets('}ApplicationSecurity', processAppFolders, dn);\r\n\t\tif (Trim(ddd)@='READ');\r\n\t\t\tgotaccess =  gotaccess | trim(dn ) | ',';\r\n\t\tendif;\r\n\t\tddq = ddq + 1;\r\n\tend;\r\n\tgog = long(Trim(gotaccess));\r\n\tgotaccess = subst(trim(gotaccess),1,(gog-1));\r\n\tasciioutput(Trim(pDocumentName)  |  '.html','<tr><td style=\"width:130px\">' | processAppFolders  | ' </td><td style=\"width:130px\">' |  Tcategory  | ' </td><td style=\"width:130px\">' | Tpurpose | ' </td><td style=\"width:130px\">' |  LR  | ' </td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"width:130px\"><center>' | '' | '</center> </td><td style=\"width:130px\">' |  Trim(gotaccess) | ' </td></tr>');\r\n\tnt = nt + 1;\r\n\tasciioutput(Trim(pDocumentName)  |  '.html', '</table></div>');\r\n\tasciioutput(Trim(pDocumentName)  |  '.html', '<th>Folder Name</th><th>Category</th><th>Purpose</th><th>Sub-Folders<BR>or Files</th><th>Type</th><th>Groups with Access<BR>To Folder</th>');\r\nend;\r\n\r\n#asciioutput(Trim(pDocumentName)  |  '.html', '</table></div>');\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Groups and Clients.html   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# --- do security on a seperate document\r\n\r\npDocumentName = pOutputSite|'Groups and Clients';\r\nasciioutput(Trim(pDocumentName)  |  '.html', h1);\r\n\r\nTotalGroups = dimsiz('}Groups');\r\nTotalClients=dimsiz('}Clients');\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"group-detail-header\" class=\"title1\"><h2>' | Trim(pHeadingText) | ' TM1 Groups and Clients</h2></div>');\r\nasciioutput(Trim(pDocumentName)   | '.html', '<div id=\"group-title\"><p class=\"title2\">Total Groups: ' | str(TotalGroups,3,0) | ' Total Clients: ' | str(TotalClients,3,0) | '</p></div>');\r\n#asciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\n#asciioutput(Trim(pDocumentName)  |  '.html', '<th>Group Name</th><th>Assigned<BR>Clients</th><th>Client Count</Th><th>Assigned<BR>Cubes</th><th>Assigned<BR>Dimensions</th>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<div id=\"group-details\">');\r\n          no_Groups = dimsiz('}Groups');\r\n          nt = 1;\r\n          while (nt<=no_Groups);\r\n                    processGroups = dimnm('}Groups', nt);\r\n                   # sprocessAppFolders = ATTRSL('}Groups', Trim(processAppFolders), 'en-us');\r\n                   #if (Trim(sprocessAppFolders)@='');\r\n                   sprocessGroups = processGroups;\r\n                  # endif;\r\n                   if(nt = 1);\r\n                         asciioutput(Trim(pDocumentName)  |  '.html', '<table id=\"'|processGroups|'\" class=\"gridtable cube-table\" width=\"1000\"><tr>');\r\n                         asciioutput(Trim(pDocumentName)  |  '.html', '<th>Group Name</th><th>Assigned<BR>Clients</th><th>Client Count</Th><th>Assigned<BR>Cubes</th><th>Assigned<BR>Dimensions</th>');\r\n                  endif;\r\n                  i=1;\r\n                  z=0;\r\n                  ii=dimsiz('}Clients');\r\n                  p = '';\r\n                  while (i<=ii);\r\n                           sz = dimnm('}clients', i);\r\n                           whom = cellgets('}ClientGroups', trim(sz), sprocessGroups);\r\n                           if (trim(whom)@<>'');\r\n                                      toite = ATTRSL('}Clients', trim(sz), '}TM1_DefaultDisplayValue');\r\n                           p = p | trim(toite) | '<BR>';\r\n                           z=z+1;\r\n                           endif;\r\n                           i = i + 1;\r\n                  end;\r\n\r\n                  i=1;\r\n                  ii=dimsiz('}Cubes');\r\n                  pp = '';\r\n                  while (i<=ii);\r\n                           sz = dimnm('}Cubes', i);\r\n                           whom = cellgets('}CubeSecurity', trim(sz), sprocessGroups );\r\n                           if (trim(whom)@<>'' & subst(trim(sz),1,1)@<>'}'); \r\n                               if ((i+1)>ii);\r\n                                    pp = pp | trim(sz);\r\n                               else;                                    \r\n                                    pp = pp | trim(sz) | ', ';\r\n                               endif;\r\n                           endif;\r\n                           i = i + 1;\r\n                  end;\r\n\r\n                  if (trim(pp)@<>'');\r\n                  spp = subst(pp,1,long(pp)-2);\r\n                 endif;\r\n\r\n                    i=1;\r\n                  ii=dimsiz('}Dimensions');\r\n                  dd = '';\r\n                  while (i<=ii);\r\n                           sz = dimnm('}Dimensions', i);\r\n                           whom = cellgets('}DimensionSecurity', trim(sz), sprocessGroups );\r\n                           if (trim(whom)@<>'' & subst(trim(sz),1,1)@<>'}'); \r\n                               if ((i+1)>ii);\r\n                                    dd = dd | trim(sz);\r\n                               else;                                    \r\n                                    dd = dd | trim(sz) | ', ';\r\n                               endif;\r\n                           endif;\r\n                           i = i + 1;\r\n                  end;\r\n\r\n                  if (trim(dd)@<>'');\r\n                  sdd = subst(dd,1,long(dd)-2);\r\n                 endif;\r\n                  \r\n                   asciioutput(Trim(pDocumentName)  |  '.html','<tr><td style=\"width:130px\">' | sprocessGroups  | ' </td><td style=\"width:150px\">' |  p | ' </td><td style=\"width:50px\"><center>' | str(z,9,0) | '</center></td><td style=\"width:500px\">' |  spp | ' </td>   \r\n                                                                            <td style=\"width:500px\">' |  sdd | ' </td></tr>');\r\n                   nt = nt + 1;\r\nif (nt<=no_Folders);\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<table id=\"'|processGroups|'\"  class=\"gridtable cube-table\" width=\"1000\"><tr>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<th>Group Name</th><th>Assigned<BR>Clients</th><th>Client Count</Th><th>Assigned<BR>Cubes</th><th>Assigned<BR>Dimensions</th>');\r\nendif;\r\n             end;\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table></div>');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}

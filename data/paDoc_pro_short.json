[
{
    "@odata.context": "$metadata#Processes/$entity",
    "@odata.etag": "W/\"126434\"",
    "Name": "sys_paDoc",
    "HasSecurityAccess": false,
    "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#~~~~~~~~~~~~~~~~  Start Program Description ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#\r\n# This process generates the application documentation                                                                                  #\r\n#~~~~~~~~~~~~~~~~  End Program Description ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n#~~~~~~~~~~~~~~~~~~~  Maintenance Log ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# ----Date-----|----Programmer---|---------------Description---------------------------------------------------------------------#\r\n#   Mar-2017         Jim Miller    -  Created framework.                                                                                                  # \r\n#   Apr-2018     Dean Watts    - Revised structure and re-wrote output documents\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n\r\n# --- Declares\r\nDatasourceASCIIQuoteCharacter='';\r\n\r\n# --- Cubes\r\npaDoc_CubeName = '}sys_paDoc';\r\n\r\n# --- Dimensions\r\npaDoc_000_DimName = '}sys_paDoc';\r\npaDoc_001_DimName = '}sys_paDocRUX';\r\npaDoc_002_DimName = '}sys_paDocCubesProcesses';\r\npaDoc_003_DimName = '}sys_paDocDimensionsProcesses';\r\npaDoc_004_DimName = '}sys_paDocProcessesProcesses';\r\npaDoc_005_DimName = '}sys_paDocProcessesFiles';\r\npaDoc_006_DimName = '}sys_paDocChoresProcesses';\r\npaDoc_007_DimName = '}sys_paDocAppFolders';\r\npaDoc_008_DimName = '}sys_paDocPictureDriver';\r\n\r\n# --- constants\r\nNotFound = 0;\r\nReRunSetup = 1;\r\n\r\npDocumentName = Trim(pOutputSite) | Trim(pDocumentName);\r\nsavedname = pDocumentName;\r\n\r\n# --- make sure the documentor dimensions are built and available\r\n\r\nif (pSetting=ReRunSetup);\r\n         ExecuteProcess('sys_paDoc_Setup','pRUX',Trim(pRUX), 'pOutputSite', TRIM(pOutputSite) | 'outputs\\');\r\nEndif;\r\n\r\n# --- do the support dimensions exist? if not create it\r\n\r\n# --- start of main processing\r\n\r\n# --- make sure the cubes are mapped to the categories\r\ni=1;\r\nsSetupFlag = 'No';\r\n#DimensionDeleteAllElements(paDoc_008_DimName);\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Transformation','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Financial','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'System & Useability','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Mapping','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Commentary','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Calculation','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Bonus','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Currency','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Input','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'Rates and Dates','C');\r\n#DimensionElementInsert(paDoc_008_DimName,'', 'TBD','C'); \r\n\r\nii = dimsiz('}Cubes');\r\nwhile (i<=ii);\r\n\tsE = dimnm('}cubes', i);\r\n\tif (subst(trim(sE),1,1)@<>'}');\r\n\t\tsEc = CellGetS(paDoc_CubeName, Trim(sE), 'category');\r\n                                           if (TRIM(sEc)@='');\r\n                                                                sEc = 'TBD';\r\n                                           endif;\r\n                                           if (dimix(paDoc_008_DimName, Trim(sEc))=0);\r\n                                                    DimensionElementInsert(paDoc_008_DimName,'', Trim(sEc),'C');\r\n                                           endif;\r\n\t\tif (Trim(sEc)@<>'');                                                                \r\n\t\t\tDimensionElementInsert(paDoc_008_DimName,'', Trim(sE),'N');\r\n\t\t\tDimensionElementComponentAdd(paDoc_008_DimName, Trim(sEc),Trim(sE), 1);\r\n\t\t\tsSetupFlag = 'Yes';                                           \r\n\t\tEndif;\r\n\tendif;\r\n\ti = i + 1;\r\nend;\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Cube Structures.html  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\nsaved = Trim(pDocumentName);\r\npDocumentName = pOutputSite|'Cube Structures';\r\nasciioutput(Trim(pDocumentName) |  '.html', '<head><link rel=\"stylesheet\" type=\"text/css\" href=\"css/gridtable.css\"></head>');\r\n\r\n# --- start the table that will hold the current category of cubes\r\nasciioutput(Trim(pDocumentName) |  '.html', '<br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName) |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' Cognos TM1 Cube Structures</center></h2></b></font>');\r\nasciioutput(Trim(pDocumentName) |  '.html', '<font size=\"1\" face=\"verdana\"><b><center>Note: cubes are listed below grouped by category</center></b></font>');\r\nasciioutput(Trim(pDocumentName) |  '.html', '<font size=\"1\" face=\"verdana\"><b><center>Model is as of ' | Trim(pAsOfDate) | '</center></b></font>');\r\n\r\n# --- now drive the creation of the diagram by category, then cube\r\n\r\npaiger=0;\r\ni=1;\r\nii = dimsiz(paDoc_008_DimName);\r\nwhile (i<ii);\r\n\tsE = dimnm(paDoc_008_DimName, i);\r\n\tif (DTYPE(paDoc_008_DimName, sE)@='C');\r\n\t\t# --- its a category to process\r\n\t\tikids = ELCOMPN(paDoc_008_DimName, sE);\r\n\t\tif (iKids>0);\r\n                                                                if (paiger>85);\r\n                                                                         asciioutput(Trim(pDocumentName) |  '.html', '</td></table>');\r\n                                                                         asciioutput(Trim(pDocumentName) |  '.html', '<p style=\"page-break-after:always;\"></p><br><center><img src=\"GV.png\" ></center>');\r\n                                                                         asciioutput(Trim(pDocumentName) |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' Cognos TM1 Cube Structures</center></h2></b></font>');\r\n                                                                         asciioutput(Trim(pDocumentName) |  '.html', '<font size=\"1\" face=\"verdana\"><b><center>Note: cubes are listed below grouped by category</center></b></font>');\r\n                                                                         asciioutput(Trim(pDocumentName) |  '.html', '<font size=\"1\" face=\"verdana\"><b><center>Model is as of ' | Trim(pAsOfDate) | '</center></b></font>');\r\n                                                                         paiger=0;\r\n                                                                endif;\r\n\r\n\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<BR><center><table  class=\"gridtable\">');\r\n\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<tr><td valign=\"top\" colspan=\"' | str(ikids,3,0) | '\" bgcolor=\"blue\"><font size=\"4\" color=\"black\"><b><center>' | sE | '</center></b></font></td></tr><tr></tr>');\r\n\t\t\tiii = 1;\r\n\t\t\twhile (iii<=iKids);\r\n\t\t\t\t# --- get the kid\t\t\t\r\n\t\t\t\tsCubeName = ELCOMP(paDoc_008_DimName, sE, iii);\r\n                                                                                     asciioutput(Trim(pDocumentName) |  '.html', '<td valign=\"top\">');\t\r\n\t\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<table class=\"gridtable\">');\r\n\t\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '<tr><th><b><font size=\"1\"><center>' | sCubeName  | ' </center></b></th>');\r\n\t\t\t\t# --- process the cube\r\n                                                                                     j=1;  \r\n                                                                                     asciioutput(Trim(pDocumentName) |  '.html', '<tr><td><font size=\"1\">');\r\n                                                                                     paiger = paiger + 6;\r\n\t                                                               while (j<=30);\t\t\t\r\n\t\t\t                               sD = TABDIM(sCubeName, j);\r\n\t\t\t                               if (trim(sD)@<>'');\r\n                                                                                                             gitIt = CellGetS(paDoc_CubeName, sCubeName, 'Dimensions');\r\n                                                                                                             CellPutS(gitIT | '<BR>' | sD,paDoc_CubeName, sCubeName, 'Dimensions');\r\n                                                                                                             # --- okay update this dim in the dim cube with the cube name\r\n                                                                                                             if(subst(sD,1,1)@<>'}');\r\n                                                                                                             gitIt = CellGetS(paDoc_CubeName, sD, 'Cubes');\r\n                                                                                                             endif;\r\n                                                                                                             if (scan(sCubeName, gitit)=0);\r\n                                                                                                                      CellPutS(gitIT | '<BR>' | sCubeName, paDoc_CubeName, sD, 'Cubes');\r\n                                                                                                             endif;                                                                                                    \t\t\t\t  \r\n                                                                                                             asciioutput(Trim(pDocumentName) |  '.html', '<font size=\"1\"><li>' | sD | '</font></li>');\r\n                                                                                                             paiger = paiger + 1;\r\n\t\t\t                               endif;\r\n\t\t\t                                j=j+1;\r\n\t                                                                 end;\t\t\t\t\r\n\t\t\t\tiii = iii + 1;\r\n                                                                                     asciioutput(Trim(pDocumentName) |  '.html', '</td></tr></table></td>');\r\n                                                                                     paiger = paiger + 1;\r\n\t\t\tend;\r\n\t\t\tasciioutput(Trim(pDocumentName) |  '.html', '</td></table>');\r\n                                                                paiger = paiger + 1;\r\n\t\tendif;\r\n\tendif;\t\r\n\ti=i+1;\r\nend;\r\nif (sSetupFlag@='No');\r\n         asciioutput(Trim(pDocumentName) |  '.html', '<table class=\"gridtable\"><td><center>You have not categorized any cubes. Diagram can not be generated</center></td></table>');\r\nEndif;\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\  Cube Details.html  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# --- interestingly let's now add the cube details\r\npaiger=0;\r\npDocumentName = saved;\r\npDocumentName = pOutputSite|'Cube Details';\r\n\r\nasciioutput(Trim(pDocumentName) |  '.html', '<head><link rel=\"stylesheet\" type=\"text/css\" href=\"css/gridtable.css\"></head>');\r\n\r\n# --- cube specifics section starts here\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', ' <br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Cube Specifics</h1>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\">Cubes by Number of Dimensions</font><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"1\" face=\"verdana\">(Note that more than 12 dimensions per cube is non-optimal)</font><BR><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe width=\"920\" height=\"220\" align=\"center\" src=\"CubViz001.html\" frameborder=\"0\"></iframe>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe width=\"920\" height=\"140\" align=\"center\" src=\"keyed2.html\" frameborder=\"0\"></iframe><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<p style=\"page-break-after:always;\"></p> ');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', ' <br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Cube Specifics</h1>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\">Cubes by Proportional Size</font><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe width=\"1020\" height=\"1020\" align=\"center\" src=\"bubbleme.html\" frameborder=\"0\"></iframe>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe width=\"920\" height=\"140\" align=\"center\" src=\"flare.html\" frameborder=\"0\"></iframe><BR>');\r\n\r\n# --- start of live cube details\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<p style=\"page-break-after:always;\"></p> ');\r\nasciioutput(Trim(pDocumentName)  |  '.html', ' <br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Cube Specifics</h1><table class=\"gridtable\" width=\"600\">\r\n                                                                           <tr><th>Cube Name</th>\r\n                                                                                  <th width=\"50\">Category</th>\r\n                                                                                  <th>Purpose</th>\r\n                                                                                  <th>Dimensions</th>\r\n                                                                                  <th>Rules</th>                                                                                                                                                      \r\n                                                                                  </tr>');\r\n\r\n# --- setup data file for cubes graphing\r\n\r\nasciioutput(Trim(pOutputSite) | 'cubs.csv', 'salesperson,sales');\r\n\r\n# --- loop the cubs again\r\nnoCubes = dimsiz('}Cubes');\r\nfCounter = 1;\r\nkeyd2 = '';\r\nwhile (fCounter <= noCubes);\r\n\r\n\tV1 = dimnm('}Cubes', fCounter);\r\n                     if(subst(V1,1,1)@<>'}');\r\n                          sk = CellGetS(paDoc_CubeName , V1, 'Notes');\r\n                     endif;\r\n\tif (subst(Trim(V1),1,1)@<>'}' & Trim(sk)@<>'Exclude');\t\r\n\t         aq = CellGetS(paDoc_CubeName , V1, 'Category');\r\n\t         V2=  CellGetS(paDoc_CubeName , V1, 'Purpose');\t\t\r\n                               v3 = FileExists(Trim(pRUX) | TRIM(V1) |'.RUX');             \r\n\t          if (V3=0);\r\n\t\tV4 = '';\r\n\t          else;\r\n\t\tV4='Yes';\r\n\t          endif;\r\n\r\nV5a='';\r\nsEE = '';\r\ntheP = '';\r\nMEASURES_DIMENSION='';\r\nNoM=0;\r\nxnay=0;\r\nxnayW=0;\t\r\nV5='';\r\njim = 1;\r\nmyDim = 'start';\r\nnoM =0;\r\nopp=0;\r\n\r\nwhile (myDim@<>'');\r\n       myDim = TABDIM(V1, jim);\r\n       if (TRIM(myDim)@<>'');\r\n               V5 = V5 |  myDim | ', ';\r\n               opp = opp + 1;\r\n               asciioutput(Trim(pOutputSite) | 'cubs.csv', str(fCounter,9,0), str(opp,3,0));\r\n      endif;\r\n      jim = jim + 1;\r\nend;\r\n\r\nkeyd2 = keyd2  | str(fCounter,9,0) | ' - ' | trim(V1);\r\n\r\n# ---  check for designated  measures and period dimensions\r\nMEASURES_DIMENSION = cellgets('}CubeProperties', Trim(V1), 'MEASURES_DIMENSION');\r\nif (Trim(MEASURES_DIMENSION)@<>'');\r\n         noM = dimsiz(MEASURES_DIMENSION);\r\nelse;\r\n         MEASURES_DIMENSION = '* * Warning - No measures dimension designated * *';\r\n         noM = 0;\r\nendif;\r\n# ---  check for designated  measures and period dimensions\r\nTIME_DIMENSION = cellgets('}CubeProperties', Trim(V1), 'TIME_DIMENSION');\r\nif (Trim(TIME_DIMENSION)@<>'');\r\n         noP = dimsiz(TIME_DIMENSION);\r\nelse;\r\n         TIME_DIMENSION = '* * Warning - No time dimension designated * *';\r\n         noP = 0;\r\nendif;\r\n\r\nLOGGING = cellgets('}CubeProperties', Trim(V1), 'LOGGING');\r\nDEMANDLOAD  = cellgets('}CubeProperties', Trim(V1), 'DEMANDLOAD');\r\n\r\nmyL = Long(trim(V5));\r\nV5a = Subst(V5, 1, (myL-1));\r\n\r\nfoo = ELCOMPN('}sys_paDocRUX', 'Source Cube: ' | Trim(V1));\r\nfoo1 = 1;\r\nsEE = '';\r\n         asciioutput(pOutputSite | 'fooboutput.cma',sEE,'before foo',V1,'Source Cube: ' | Trim(V1),STR(foo,1,0));\r\nwhile (foo1<=foo);\r\n         asciioutput(pOutputSite | 'foooutputprecheck.cma',sEE,STR(foo,1,0),ELCOMP('}paDocRUX', 'Source Cube: ' | Trim(V1), foo1));\r\n         if (foo1>1);\r\n         sEE = sEE | ', ' | ELCOMP('}sys_paDocRUX', 'Source Cube: ' | Trim(V1), foo1); \r\n         asciioutput(pOutputSite | 'foo1output.cma',sEE,'anyone home');\t\t \r\n         else;\r\n         sEE = sEE | ' ' | ELCOMP('}sys_paDocRUX', 'Source Cube: ' | Trim(V1), foo1);\r\n         asciioutput(pOutputSite | 'foooutput.cma',sEE,'anyone');\t\t \r\n         endif;        \r\n         foo1 = foo1 + 1;\r\nend;\r\n\r\n# --- gather the processes list\r\ntheP = '';\r\nmanyp = ELCOMPN('}sys_paDocCubesProcesses', 'H-' |Trim(V1));\r\nm1 = 1;\r\nwhile (m1<=manyp);\r\n         soap = ELCOMP('}sys_paDocCubesProcesses', 'H-' |Trim(V1), m1);\r\n         theP = theP  | Trim(soap) |  '<BR>';\r\n         m1 = m1 + 1;\r\nend;\r\n\r\n# --- for this cube check access of each group\r\n\r\nngrps = dimsiz('}groups');\r\nv = 1;\r\nxnay =0;\r\nxnayW=0;\r\nwhile (v <= ngrps);\r\n         sGrp = dimnm('}groups', v);\r\n\t\t myA = CellGetS('}CubeSecurity', Trim(V1), Trim(sGrp));\r\n\t\t if (Trim(myA)@<>'');\t\t\t\r\n                                                                 if (Trim(myA)@='Read');\r\n                                                                    xnay = xnay + 1;\r\n                                                                 elseif (Trim(myA)@='Write');\r\n                                                                    xnayW = xnayW + 1;\r\n                                                                 endif;\r\n\t\t endif;\r\n\t\t v = v +1;\r\nend;\r\n\r\nmViews =  CellGetS('}sys_paDoc' , V1, 'Views');\r\nxnay = scan(',,',mViews);   \r\n\r\n# --- now we gotta add all of the users private views\r\nick = dimsiz('}Clients');\r\nicky = 1;\r\nwhile (icky<=ick);\r\n   whome1 = dimnm('}clients', icky);\r\n   if (dimix('}paDoc', whome1)>0);\r\n   ncubes = dimsiz('}Cubes');\r\n   nc=1;\r\n   while (nc<=ncubes);\r\n       myCube = dimnm('}Cubes', nc);\r\n   pvi = CellGetS('}sys_paDoc', myCube, whome1);\r\n   if (trim(pvi)@<>'');\r\n      mViews = mViews | ',' | pvi;\r\n   endif;\r\n   nc=nc +1;\r\n end;\r\n  endif;\r\n\r\n   icky = icky + 1;\r\nend;\r\n\r\nfmViews = subst(mViews,1,(LONG(mViews)-1));\r\n        \r\n\r\n\r\nif (paiger>2);\r\n         asciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\n         asciioutput(Trim(pDocumentName)  |  '.html', '<BR>');\r\n         asciioutput(Trim(pDocumentName)  |  '.html', '<center>');\r\n         asciioutput(Trim(pDocumentName)  |  '.html', '<p style=\"page-break-after:always;\"></p> <br><center><img src=\"GV.png\" ></center>');\r\n         asciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Cube Specifics<BR></h1>\r\n                                                                                   <table class=\"gridtable\" width=\"600\">\r\n                                                                            <tr><th>Cube Name</th>\r\n                                                                                    <th width=\"50\">Category</th>\r\n                                                                                    <th>Purpose</th>\r\n                                                                                    <th>Dimensions</th>\r\n                                                                                    <th>Rules</th>\r\n                                                                                    </tr>');\r\n         paiger = 0;\r\nEndif;\r\n\r\n\tasciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td>' | V1 | ' </td>\r\n                                                                          <td>' | aq | ' </td>\r\n                                                                          <td>' | V2 | ' </td>\r\n                                                                          <td>' | V5a  | ' </td>\r\n                                                                          <td><center>' | V4 | '</center> </td>\r\n                                                                           </tr>');\r\n\r\n                        asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Cubes Referenced in Rules:</b></td>\r\n                                                                          <td colspan=\"9\">' |  Trim(sEE) | '</td>\r\n                                                                           </tr>');\r\n\r\n                       asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Referenced in Process:</b></td>\r\n                                                                          <td colspan=\"9\">' |  Trim(theP)| '</td>\r\n                                                                           </tr>');\r\n\r\n                      asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Views:</b></td>\r\n                                                                          <td colspan=\"9\">' |  fmViews | '</td>\r\n                                                                           </tr>');\r\n\r\nc = 1;\r\ncccc = '';\r\niz=0;\r\ncc = dimsiz('}Groups');\r\nwhile (c<=cc);\r\n         sC = dimnm('}Groups', c);\r\n                    if (Trim(sC)@<>'');\r\n                             ccc = cellgets('}CubeSecurity', Trim(V1), Trim(sC));\r\n\t        if (trim(ccc)@<>'');\r\n                                      flipped = Trim(sC);\r\n                                      if (iz=0);\r\n                                                     cccc = cccc | Trim(flipped);\r\n                                       else;\r\n\t\t          cccc = cccc | ', ' |Trim(flipped);\r\n                                                     iz=1;\r\n                                       endif;\r\n\t        endif;\r\n\tendif;\r\n\t c = c + 1;\r\nend;\r\n                     asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Groups with Access:</b></td>\r\n                                                                          <td colspan=\"9\">Read=' | str(xnay,3,0) | '<BR>Write=' | str(xnayW,3,0) | '<BR>' | Trim(cccc) | '</td></tr>');\r\n\r\n                     asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Measures Dimension<BR>No. of Measures:</b></td>\r\n                                                                          <td colspan=\"9\">' | Trim(MEASURES_DIMENSION) | '<BR>' | str(NoM,3,0) | '</td></tr>');\r\n\r\n                    asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Time Dimension<BR>No. of Measures:</b></td>\r\n                                                                          <td colspan=\"9\">' | Trim(TIME_DIMENSION ) | '<BR>' | str(NoP,3,0) | '</td></tr>');\r\n\r\n                    asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Logging<BR>On Demand:</b></td>\r\n                                                                          <td colspan=\"9\">' | Trim(LOGGING ) | '<BR>' | DEMANDLOAD | '</td></tr>');\r\n\r\n                     paiger = paiger +11;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \r\n\tendif;\r\n\t\r\n\tfCounter = FCounter + 1;\r\n\t\r\nend;\r\nasciioutput(Trim(pOutputSite) | 'keyed2.html', '<font size=\"1\" face=\"verdana\"><center>' | keyd2 | '</center></font>');\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Processes and Chores.html   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# --- interestingly let's now add the details about the TurboIntegrator processes\r\n#pDocumentName = savedname;\r\npDocumentName = pOutputSite|'Processes and Chores';\r\npaiger=0;\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<head><link rel=\"stylesheet\" type=\"text/css\" href=\"css/gridtable.css\"></head>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName)   |  '.html', '<center>');\r\nasciioutput(Trim(pDocumentName)   |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Processes<BR></h1>');\r\n\r\nNoProcesses = dimsiz('}Processes');\r\nasciioutput(Trim(pDocumentName)   |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\nasciioutput(Trim(pDocumentName)   |  '.html', 'Total Number of TurboIntegrator Processes: ' | str(NoProcesses,9,0));\r\nasciioutput(Trim(pDocumentName)   |  '.html', '</tr></table><BR>');\r\n\r\nasciioutput(Trim(pDocumentName)   |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\nasciioutput(Trim(pDocumentName)  | '.html', '<th>Process Name</th>\r\n                                                                                 <th>Category</th>\r\n                                                                                 <th>Purpose</th>\r\n                                                                                 <th>Total<BR>Lines</th>\r\n                                                                                  <th>Cubes Referenced</th>\r\n                                                                                  <th>Dimensions Referenced</th>\r\n                                                                                  <th>Processes Referenced</th>\r\n                                                                                  <th>Referenced<BR>In Chore(s)</th></tr>');\r\n# --- loop the processes nows\r\nnoCubes = dimsiz('}Processes');\r\nfCounter = 1;\r\nwhile (fCounter <= noCubes);\r\n\r\n\tV1 = dimnm('}Processes', fCounter);\r\n                      if(subst(V1,1,1)@<>'}'); \r\n                           sE = CellGetS(paDoc_CubeName , V1, 'Exclude');\r\n                     endif;                           \r\n\r\n\tif (subst(Trim(V1),1,1)@<>'}' & sE@<>'Yes');\t\r\n\r\n                     processesCategory = CellGetS(paDoc_CubeName , V1, 'Category');\r\n\tprocessPurpose =  CellGetS(paDoc_CubeName , V1, 'Purpose');\r\n                     processNote = CellGetS(paDoc_CubeName , V1, 'Notes');\r\n\r\n                    if (trim(processNote)@<>'Exclude');\r\n\r\n# --- loop thru cubes and see if this process is a child of any of them\r\n                     love = dimsiz('}Cubes');\r\n                     lover = 1;\r\n                     sloverCube = '';\r\n                     while (lover <=love);\r\n                              loveCube = dimnm('}paDocCubesProcesses', lover);\r\n                              if (ELISANC('}paDocCubesProcesses', loveCube, V1)=1);\r\n                                       if (subst(trim(loveCube),1,2)@='H-');\r\n\t\t        Sj = subst(trim(loveCube),3,99);\r\n\t                  else;\r\n\t\t        Sj = loveCube;\r\n\t                   endif;\r\n                                        sloverCube = sloverCube | Sj | '<br>';\r\n                              endif;\r\n                              lover = lover + 1;\r\n                     end;\r\n\r\n# --- loop thru dimensions and see if this process is a child of any of them\r\n                     love = dimsiz('}Dimensions');\r\n                     lover = 1;\r\n                     sloverDim = '';\r\n                     while (lover <=love);\r\n                              loveCube = dimnm('}paDocDimensionsProcesses', lover);\r\n                              if (ELISANC('}paDocDimensionsProcesses', loveCube, V1)=1);\r\n                                      if (subst(trim(loveCube),1,2)@='H-');\r\n                                                  Sj = subst(trim(loveCube),3,99);\r\n\t                  else;\r\n\t\t        Sj = loveCube;\r\n\t                   endif;                                         \r\n                                        sloverDim = sloverDim | Sj | '<br>';\r\n                              endif;\r\n                              lover = lover + 1;\r\n                     end;\r\n\r\n# --- loop thru processes and see if this process is a child of any of them\r\n                     love = dimsiz('}Processes');\r\n                     lover = 1;\r\n                     sloverPro = '';\r\n                     while (lover <=love);\r\n                              loveCube = dimnm('}Processes', lover);\r\n                              if (ELISANC(paDoc_004_DimName, 'H-' | loveCube, V1)=1);\r\n                                        sloverPro = sloverPro | loveCube | '<br>';\r\n                              endif;\r\n                              lover = lover + 1;\r\n                     end;\r\n\r\n# --- loop thru files and see if this process is a child of any of them\r\n\r\n                     ikiders=ELCOMPN(paDoc_005_DimName, Trim(V1));\r\n                     ikidercare = 1;\r\n                     sloverFile = '';\r\n                     while (ikidercare<=ikiders);\r\n                              loveCube = ELCOMP(paDoc_005_DimName, Trim(V1), ikidercare);\r\n                              sloverFile = sloverFile | loveCube | '<br>';\r\n                              ikidercare = ikidercare + 1;\r\n                     end;\r\n\r\n                     processLines = CellGetS(paDoc_CubeName, Trim(V1), 'Size');\r\n\r\n                    n = dimsiz('}chores');\r\n                    nn=1;\r\n                    dachores = '';\r\n                    while (nn<=n);\r\n                             nnn = dimnm('}Chores', nn);\r\n                             nnnn = ELISANC('}paDocChoresProcesses', trim(nnn), Trim(V1));\r\n                             if (nnnn=1);\r\n                                      dachores = dachores | Trim(nnn) | ' ';\r\n                             endif;\r\n                             nn = nn + 1;\r\n                      end;\r\n                    \r\n                   \r\n      \r\n                     asciioutput(Trim(pDocumentName) |  '.html', \r\n                                                                         '<tr>\r\n                                                                         <td><B>' | ' ' | V1 | ' </B></td>\r\n                                                                         <td>' | processesCategory | ' </td>\r\n                                                                         <td>' | processPurpose | ' </td>\r\n                                                                         <td><center>' | processLines | ' </center></td>\r\n                                                                         <td>' | sloverCube   | ' </td>\r\n                                                                         <td><center>' | sloverDim | '</center> </td>\r\n                                                                         <td>' | trim(sloverPro) | ' </td>      \r\n                                                                         <td>' | trim(dachores) | ' </td>      \r\n                                                                          </tr>');\r\n\r\n                    asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Files Referenced:</b></td>                                                                     \r\n                                                                         <td colspan=\"8\">' | Trim(sloverFile) | ' </td>   \r\n                                                                          </tr>');\r\n\r\n                    itout = cellgets(paDoc_CubeName, Trim(V1), 'Notes');\r\n                    asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td><b>Files Written:</b></td>                                                                     \r\n                                                                         <td colspan=\"8\">' | Trim(itout) | ' </td>   \r\n                                                                          </tr>');\r\n\r\n                   paiger = paiger + 8;                                     \r\n\r\n                     endif;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \r\n\tendif;\r\n\r\nfCounter = fCounter + 1;\r\n  if (paiger>20);\r\n                         paiger = 0;\r\n                         asciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\n                         asciioutput(Trim(pDocumentName)  |  '.html', '<p style=\"page-break-after:always;\"></p> <br><center><img src=\"GV.png\" ></center>');\r\n                         asciioutput(Trim(pDocumentName)  |  '.html', '<center>');\r\n                         asciioutput(Trim(pDocumentName)   | '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Processes<BR></h1>');\r\n                         asciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\n                         asciioutput(Trim(pDocumentName)  |  '.html', '<th>Process Name</th>\r\n                                                                                 <th>Category</th>\r\n                                                                                 <th>Purpose</th>\r\n                                                                                  <th>Total<BR>Lines</th>\r\n                                                                                  <th>Cubes Referenced</th>\r\n                                                                                  <th>Dimensions Referenced</th>\r\n                                                                                  <th>Processes Referenced</th>\r\n                                                                                  <th>Referenced<BR>In Chore(s)</th></tr>');\r\n                      \r\n                     endif;\r\n\r\nend;\r\n\r\n# --- interestingly let's now add the details\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</tr></table><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<p style=\"page-break-after:always;\"></p> <br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Chores<BR></h1><table class=\"gridtable\" width=\"800\"><tr>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<th>Chore Name</th>\r\n                                                                                 <th>Category</th>\r\n                                                                                 <th>Purpose</th>\r\n                                                                                  <th>Processed Referenced</th>\r\n                                                                                  <th>Active Y/N</th>\r\n                                                                                  <th>Start Date</th>\r\n                                                                                  <th>Notes</th>');\r\n\r\n# --- loop the chores nows\r\nnoChores = dimsiz('}Chores');\r\nfCounter = 1;\r\nsGotChores = 'No';\r\nwhile (fCounter <= noChores);\r\n\r\n                     V1 = dimnm('}Chores', fCounter);\r\n\tif (subst(Trim(V1),1,1)@<>'}');\r\n                              processesCategory = CellGetS(paDoc_CubeName , V1, 'Category');\r\n\t         processPurpose =  CellGetS(paDoc_CubeName , V1, 'Purpose');\r\n                              processNotes =  CellGetS(paDoc_CubeName , V1, 'Notes');\r\n\r\n                               ikiders=ELCOMPN(paDoc_006_DimName, Trim(V1));\r\n                               ikidercare = 1;\r\n                               sloverProcess = '';\r\n                               while (ikidercare<=ikiders);\r\n                               loveCube = ELCOMP(paDoc_006_DimName, Trim(V1), ikidercare);\r\n                               sloverProcess = sloverProcess | loveCube | '<br>';\r\n                               ikidercare = ikidercare + 1;\r\n                               end;\r\n                               sStatus = CellGetS(paDoc_CubeName , V1, 'Status');\r\n                               sSDT = CellGetS(paDoc_CubeName , V1, 'Start Date Time');\r\n                               sGotChores = 'Yes';\r\n                              \r\n                              asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td>' | V1 | ' </td>\r\n                                                                          <td>' |  processesCategory  | ' </td>\r\n                                                                          <td>' | processPurpose  | ' </td>\r\n                                                                          <td>' | sloverProcess  | ' </td>\r\n                                                                          <td><center>' | sStatus | '</center> </td>\r\n                                                                          <td>' | sSDT | ' </td>\r\n                                                                           <td>' | processNotes  | ' </td>                                                                         \r\n                                                                           </tr>');\r\n\r\n                       endif;\r\n                       fCounter = fCounter + 1;\r\n\r\nend;\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\nif (sGotChores@='No');\r\n         asciioutput(Trim(pDocumentName) | '.html', '<table class=\"gridtable\"><td><center>No Appication Chores Found.</center></td></table>');\r\nEndif;\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Dimensions.html   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# --- begin dimensions section\r\n#pDocumentName = savedname;\r\npDocumentName = pOutputSite|'Dimensions';\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<head><link rel=\"stylesheet\" type=\"text/css\" href=\"css/gridtable.css\"></head>');\r\n\r\n# --- interestingly let's now add the details\r\n\r\nPaiger=0;\r\n\r\nNoAtts = 0;\r\nNoDims = DIMSIZ('}Dimensions');\r\nq=1;\r\nNid=0;\r\ntotalelments=0;\r\nl = 0;\r\nwhile(q<=NoDims);\r\n         sq=dimnm('}Dimensions', q);\r\n         if (subst(sq,1,1)@<>'}');\r\n                   Nid=Nid+1;\r\n                   if (dimsiz(sq)>l);\r\n                           l = dimsiz(sq);\r\n                           lq = sq;\r\n                   endif;\r\n                   totalelments =  totalelments + dimsiz(sq);\r\n         endif;\r\n         q=q+1;\r\nend;\r\nabig = totalelments/Nid;\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<center><img src=\"GV.png\" >');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b>' | Trim(pHeadingText) | ' TM1 Dimensions</h1>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"1\" face=\"verdana\">Total Number of Dimensions: ' | STR(Nid,3,0));\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<BR>Average Dimension Size: ' | str(abig,5,0) | '<BR>Largest Dimension: ' | lq | ', with ' | str(l,9,0) | ' indexes<BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\">Shared Dimensions by Number of Elements</font><BR><BR>');\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe width=\"920\" height=\"220\" align=\"center\" src=\"DimViz001.html\" frameborder=\"0\"></iframe>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<iframe width=\"920\" height=\"100\" align=\"center\" src=\"keyed.html\" frameborder=\"0\"></iframe><BR>');\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"800\"><tr>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<th>Dimension Name</th>\r\n                                                                                      <th>Category</th>\r\n                                                                                      <th>Purpose</th>\r\n                                                                                      <th>Attribute/Type</th>\r\n                                                                                      <th>Number<BR>of<BR>Elements</th>\r\n                                                                                      <th>Cubes</th>\r\n                                                                                       <th>Shared</th>\r\n                                                                                      <th>Subsets</th>');\r\n\r\n# --- loop the dimensions nows\r\nnoCubes = dimsiz('}Dimensions');\r\nfCounter = 1;\r\ndcounter = 0;\r\nkeyd='';\r\nasciioutput(Trim(pOutputSite) | 'sales.csv', 'salesperson,sales');\r\nwhile (fCounter <= noCubes);\r\n\r\n                     V1 = dimnm('}Dimensions', fCounter);\r\n                     if(subst(V1,1,1)@<>'}');\r\n                        EE =  CellGetS(paDoc_CubeName , V1, 'Exclude');\r\n                     endif;\r\n\tif (subst(Trim(V1),1,1)@<>'}' & EE @<>'Exclude');\r\n                              processesCategory = CellGetS(paDoc_CubeName , V1, 'Category');\r\n\t         processPurpose =  CellGetS(paDoc_CubeName , V1, 'Purpose');\r\n                              processNotes =  CellGetS(paDoc_CubeName , V1, 'subsets');\r\n                              processCubes =  CellGetS(paDoc_CubeName , V1, 'Cubes');\r\n\r\n                             if (TRIM(processCubes)@='');\r\n                                      shrd = 'No';\r\n                             else;\r\n                             if (scan('<BR>', subst(trim(processCubes),5,99))=0);\r\n                                      shrd = 'No';\r\n                             else;\r\n                                      shrd ='Yes';\r\n                             endif;\r\n                              endif;\r\n\r\n                               i = FileExists('}ElementAttributes_' | Trim(V1)  | '.dim');\r\n                               if (i>0);\r\n                                        ikiders = dimsiz('}ElementAttributes_' | Trim(V1));\r\n                                        NoAtts = NoAtts + ikiders;\r\n                               ic = 1;\r\n                               sA='';\r\n                               while (ic<=ikiders);\r\n                                        sE = dimnm('}ElementAttributes_' | Trim(V1), ic);\r\n                                        if (sE@<>'');\r\n                                                atype=DTYPE('}ElementAttributes_' | Trim(V1), Trim(sE));\r\n                                                if (atype@='AA');\r\n                                                         atype = '(Alias)';\r\n                                                elseif (atype@='AS');\r\n                                                         atype = '(String)';\r\n                                                 elseif (atype@='AN');\r\n                                                          atype='(Number)';\r\n                                                 else;\r\n                                                         atype = atype;\r\n                                                 endif;\r\n\r\n                                                sE = sE | '  ' | trim(atype);\r\n                                                 sA = sA | sE | '<BR>';\r\n                                        endif;\r\n                                        ic = ic + 1;\r\n                               end;\r\n                               endif;\r\n\r\n                               noElements = dimsiz(V1);           \r\n                               xnay = scan('<BR><BR><BR>',processNotes);   \r\n                               if (xnay=0);\r\n                                        xnay=long(processNotes);\r\n                               endif;\r\n                               fprocessNotes = subst(processNotes,1,xnay);             \r\n                              \r\n                              asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td>' | V1 | ' </td>\r\n                                                                          <td>' |  processesCategory   | ' </td>\r\n                                                                          <td>' | processPurpose   | ' </td>\r\n                                                                          <td>' |  sA  | ' </td>\r\n                                                                          <td nowrap=\"nowrap\"><center>' | str(noElements,3,0) | '</center> </td>\r\n                                                                          <td>' |  processCubes   | ' </td>\r\n                                                                          <td>' |  shrd   | ' </td>\r\n                                                                          <td valign=\"Top\">' |  trim(fprocessNotes)   | ' </td>                                                                         \r\n                                                                          </tr>');\r\n                      \r\n                       dcounter = dcounter + 1;\r\n                       if (shrd@='Yes');\r\n                                asciioutput(Trim(pOutputSite) | 'sales.csv', str(dcounter,3,0), str(noElements,3,0));\r\n                                keyd = keyd | ' ' | str(dcounter,3,0) | ' - ' | Trim(V1);\r\n                       endif;\r\n\r\n                       Paiger = Paiger + 1;\r\n                       if (Paiger>5 & fCounter < noCubes);\r\n                                Paiger=0;\r\n                                asciioutput(Trim(pDocumentName)  |  '.html', '</table><p style=\"page-break-after:always;\"></p>');\r\n                                asciioutput(Trim(pDocumentName)  |  '.html', '<center><img src=\"GV.png\" ></center>');\r\n                                asciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><center><h2><b>' | Trim(pHeadingText) | ' TM1 Dimensions</h1></center>');\r\n                                asciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"1\" face=\"verdana\"><center>Total Number of Dimensions: ' | STR(Nid,3,0));\r\n                                asciioutput(Trim(pDocumentName)  |  '.html', '<BR>Average Dimension Size: ' | str(abig,5,0) | '<BR>Largest Dimension: ' | lq | ', with ' | str(l,9,0) | ' indexes</center>');\r\n                                asciioutput(Trim(pDocumentName)  |  '.html', '<BR>');\r\n                                asciioutput(Trim(pDocumentName)  |  '.html', '<center><table class=\"gridtable\" width=\"800\"><tr>');\r\n                                asciioutput(Trim(pDocumentName)  |  '.html', '<th>Dimension Name</th>\r\n                                                                                      <th>Category</th>\r\n                                                                                      <th>Purpose</th>\r\n                                                                                      <th>Attribute/Type</th>\r\n                                                                                      <th>Number<BR>of<BR>Elements</th>\r\n                                                                                      <th>Cubes</th>\r\n                                                                                      <th>Shared</th>\r\n                                                                                      <th>Subsets</th>');\r\n                       endif;\r\n\r\n                       endif;\r\n                       fCounter = fCounter + 1;\r\n\r\nend;\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\nasciioutput(Trim(pOutputSite) | 'keyed.html', '<font size=\"1\" face=\"verdana\"><center>' | keyd | '</center></font>');\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Application Folders.html   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# ---- let's start the application folders section here\r\npaiger = 0;\r\n\r\n#pDocumentName = savedname;\r\npDocumentName = pOutputSite|'Application Folders';\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<head><link rel=\"stylesheet\" type=\"text/css\" href=\"css/gridtable.css\"></head>');\r\n\r\nno_Folders = dimsiz('}paDocAppFolders');\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Application Folders<BR></h1>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"1\" face=\"verdana\"><b><center>Total Folders: ' | str(no_Folders,3,0)  | ' <BR><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"900\"><tr>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<th>Folder Name</th>\r\n                                                                                      <th>Category</th>\r\n                                                                                      <th>Purpose</th>\r\n                                                                                      <th>Sub-Folders<BR>or Files</th>\r\n                                                                                      <th>Type</th>\r\n                                                                                      <th>Groups with Access<BR>To Folder</th>\r\n                                                                                      ');\r\n\r\n          no_Folders = dimsiz('}paDocAppFolders');\r\n          nt = 1;\r\n          while (nt<=no_Folders);\r\n                    processAppFolders = dimnm('}paDocAppFolders', nt);\r\n                    noKids = ELCOMPN('}ApplicationEntries', processAppFolders);\r\n                    ick = 1;\r\n                    LR = '';\r\n                    while (ick<=noKids);\r\n                            sbf = ELCOMP('}ApplicationEntries', processAppFolders, ick);\r\n                             LR = LR | TRim(sbf) | '<BR>';\r\n                             ick = ick + 1;\r\n                    end;\r\n         \r\n                  Tpurpose = CellGetS(paDoc_CubeName, processAppFolders, 'Purpose');\r\n                  Tcategory = CellGetS(paDoc_CubeName, processAppFolders, 'Category');     \r\n                   # --- loop thru all groups and see what groups may have access to this folder\r\n                   d = dimsiz('}groups');\r\n                   ddq = 1;\r\n                   ddd = '';\r\n                   gotaccess = '';\r\n                   while (ddq<=d);\r\n                          dn = dimnm('}groups', ddq);\r\n                         ddd = cellgets('}ApplicationSecurity', processAppFolders, dn);\r\n                         if (Trim(ddd)@='READ');\r\n                                  gotaccess =  gotaccess | trim(dn ) | ',';\r\n                         endif;\r\n                         ddq = ddq + 1;\r\n                  end;\r\n\r\n                  gog = long(Trim(gotaccess));\r\n                  gotaccess = subst(trim(gotaccess),1,(gog-1));\r\n                             \r\n\r\n                  asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td style=\"width:130px\">' | processAppFolders  | ' </td>\r\n                                                                          <td style=\"width:130px\">' |  Tcategory  | ' </td>\r\n                                                                          <td style=\"width:130px\">' | Tpurpose | ' </td>\r\n                                                                          <td style=\"width:130px\">' |  LR  | ' </td>\r\n                                                                          <td style=\"width:130px\"><center>' | '' | '</center> </td>\r\n                                                                          <td style=\"width:130px\">' |  Trim(gotaccess) | ' </td>                                                                                                                                               \r\n                                                                          </tr>');\r\n                      nt = nt + 1;\r\n                      paiger = paiger + 1;\r\n                      if (paiger>2); \r\n                        paiger = 0;\r\n                        asciioutput(Trim(pDocumentName)  |  '.html', '</table><center>');\r\n                        asciioutput(Trim(pDocumentName)  |  '.html', '<br><p style=\"page-break-after:always;\"></p><center><img src=\"GV.png\" ></center>');\r\n                        asciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><b><center>' | Trim(pHeadingText) | ' TM1 Application Folders<BR></h1><table class=\"gridtable\" width=\"900\"><tr>');\r\n                        asciioutput(Trim(pDocumentName)  |  '.html', '<th>Folder Name</th>\r\n                                                                                      <th>Category</th>\r\n                                                                                      <th>Purpose</th>\r\n                                                                                      <th>Sub-Folders<BR>or Files</th>\r\n                                                                                      <th>Type</th>\r\n                                                                                      <th>Groups with Access<BR>To Folder</th>\r\n                                                                                      ');\r\n                      endif;\r\n\r\n             end;\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\n\r\n#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   Groups and Clients.html   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#\r\n# --- do security on a seperate document\r\n#pDocumentName = savedname;\r\npDocumentName = pOutputSite|'Groups and Clients';\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<head><link rel=\"stylesheet\" type=\"text/css\" href=\"css/gridtable.css\"></head>');\r\n\r\nTotalGroups = dimsiz('}Groups');\r\nTotalClients=dimsiz('}Clients');\r\n\r\npaiger = 0;\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html',  '<br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><center>' | Trim(pHeadingText) | ' TM1 Groups and Clients</h1>');\r\nasciioutput(Trim(pDocumentName)   | '.html', '<font size=\"1\" face=\"verdana\"><b><center>Total Groups: ' | str(TotalGroups,3,0) | ' Total Clients: ' | str(TotalClients,3,0) | '<BR><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                                      '<th>Group Name</th>\r\n                                                                                       <th>Assigned<BR>Clients</th>\r\n                                                                                       <th>Client Count</Th>\r\n                                                                                       <th>Assigned<BR>Cubes</th>\r\n                                                                                        <th>Assigned<BR>Dimensions</th>');\r\npaiger = paiger + 1;\r\n\r\n          no_Folders = dimsiz('}Groups');\r\n          nt = 1;\r\n          while (nt<=no_Folders);\r\n                    processAppFolders = dimnm('}Groups', nt);\r\n                   # sprocessAppFolders = ATTRSL('}Groups', Trim(processAppFolders), 'en-us');\r\n                   #if (Trim(sprocessAppFolders)@='');\r\n                            sprocessAppFolders = processAppFolders;\r\n                  # endif;\r\n\r\n                  i=1;\r\n                  z=0;\r\n                  ii=dimsiz('}Clients');\r\n                  p = '';\r\n                  while (i<=ii);\r\n                           sz = dimnm('}clients', i);\r\n                           whom = cellgets('}ClientGroups', trim(sz), sprocessAppFolders);\r\n                           if (trim(whom)@<>'');\r\n                                      toite = ATTRSL('}Clients', trim(sz), '}TM1_DefaultDisplayValue');\r\n                           p = p | trim(toite) | '<BR>';\r\n                           z=z+1;\r\n                           endif;\r\n                           i = i + 1;\r\n                  end;\r\n\r\n                  i=1;\r\n                  ii=dimsiz('}Cubes');\r\n                  pp = '';\r\n                  while (i<=ii);\r\n                           sz = dimnm('}Cubes', i);\r\n                           whom = cellgets('}CubeSecurity', trim(sz), sprocessAppFolders );\r\n                           if (trim(whom)@<>'' & subst(trim(sz),1,1)@<>'}'); \r\n                               if ((i+1)>ii);\r\n                                    pp = pp | trim(sz);\r\n                               else;                                    \r\n                                    pp = pp | trim(sz) | ', ';\r\n                               endif;\r\n                           endif;\r\n                           i = i + 1;\r\n                  end;\r\n\r\n                  if (trim(pp)@<>'');\r\n                  spp = subst(pp,1,long(pp)-2);\r\n                 endif;\r\n\r\n                    i=1;\r\n                  ii=dimsiz('}Dimensions');\r\n                  dd = '';\r\n                  while (i<=ii);\r\n                           sz = dimnm('}Dimensions', i);\r\n                           whom = cellgets('}DimensionSecurity', trim(sz), sprocessAppFolders );\r\n                           if (trim(whom)@<>'' & subst(trim(sz),1,1)@<>'}'); \r\n                               if ((i+1)>ii);\r\n                                    dd = dd | trim(sz);\r\n                               else;                                    \r\n                                    dd = dd | trim(sz) | ', ';\r\n                               endif;\r\n                           endif;\r\n                           i = i + 1;\r\n                  end;\r\n\r\n                  if (trim(dd)@<>'');\r\n                  sdd = subst(dd,1,long(dd)-2);\r\n                 endif;\r\n                  \r\n                   asciioutput(Trim(pDocumentName)  |  '.html', \r\n                                                                         '<tr>\r\n                                                                          <td style=\"width:130px\">' | sprocessAppFolders  | ' </td>\r\n                                                                          <td style=\"width:150px\">' |  p | ' </td>\r\n                                                                          <td style=\"width:50px\"><center>' | str(z,9,0) | '</center></td>   \r\n                                                                           <td style=\"width:500px\">' |  spp | ' </td>   \r\n                                                                            <td style=\"width:500px\">' |  sdd | ' </td>                                                                \r\n                                                                          </tr>');\r\n                      nt = nt + 1;\r\nif (paiger>11 & nt<=no_Folders);\r\npaiger=0;\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<p style=\"page-break-after:always;\"></p> <br><center><img src=\"GV.png\" ></center>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"2\" face=\"verdana\"><h2><center>' | Trim(pHeadingText) | ' TM1 Groups and Clients</h1>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<font size=\"1\" face=\"verdana\"><b><center>Total Groups: ' | str(TotalGroups,3,0) | ' Total Clients: ' | str(TotalClients,3,0) | '<BR><BR>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<table class=\"gridtable\" width=\"1000\"><tr>');\r\nasciioutput(Trim(pDocumentName)  |  '.html', '<th>Group Name</th>\r\n                                                                                      <th>Assigned<BR>Clients</th>\r\n                                                                                       <th>Client Count</Th>\r\n                                                                                       <th>Assigned<BR>Cubes</th>\r\n                                                                                       <th>Assigned<BR>Dimensions</th>');\r\nendif;\r\npaiger = paiger + 2;\r\n             end;\r\n\r\nasciioutput(Trim(pDocumentName)  |  '.html', '</table><BR>');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****",
    "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****",
    "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****",
    "DataSource": {
        "Type": "None"
    },
    "Parameters": [
        {
            "Name": "pDocumentName",
            "Prompt": "Enter a name for the output document",
            "Value": "BeiGene Planning",
            "Type": "String"
        },
        {
            "Name": "pHeadingText",
            "Prompt": "Enter a name for the document section heaadings",
            "Value": "BeiGene Planning",
            "Type": "String"
        },
        {
            "Name": "pAsOfDate",
            "Prompt": "Enter an \"as of\" date",
            "Value": "May 1, 2018",
            "Type": "String"
        },
        {
            "Name": "pSetting",
            "Prompt": "Enter 0 to skip setup; 1 to rerun setup",
            "Value": 0,
            "Type": "Numeric"
        },
        {
            "Name": "pOutputSite",
            "Prompt": "Enter a valid path name to write the output documents",
            "Value": "E:\\Program Files\\ibm\\cognos\\tm1_64\\webapps\\tm1web\\paDoc\\",
            "Type": "String"
        },
        {
            "Name": "pRUX",
            "Prompt": "Enter a valid path to where the RUX files are",
            "Value": "E:\\TM1 Servers\\BeiGenePlanning\\Data\\",
            "Type": "String"
        }
    ],
    "Variables": [],
    "Attributes": {
        "Caption": "sys_paDoc"
    }
}
]